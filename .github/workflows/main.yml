name: Node.js Application CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: self-hosted
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Install dependencies and run tests
      - name: Install Node.js dependencies
        run: |
          npm install

      - name: Run tests for Node.js
        run: |
          npm test

  dockerize-and-push:
    runs-on: self-hosted
    needs: build-and-test
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Build and tag Docker image
      - name: Build Docker image for Node.js
        run: |
          docker build -t sample-nodejs:latest .

      - name: Tag Docker image to ACR
        run: |
          docker tag sample-nodejs:latest ${{ secrets.ACR_NAME }}.azurecr.io/sample-nodejs:latest

      # Log in to Azure Container Registry (ACR)
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Push Docker image to ACR
      - name: Push Docker image for Node.js to ACR
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/sample-nodejs:latest

  deploy:
    runs-on: self-hosted
    needs: dockerize-and-push
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Azure CLI
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      # Log in to Azure using service principal credentials
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Get AKS credentials
      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group RGroup --name RGroup-aks

      # Install Helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      # Deploy the Node.js application using Helm
      - name: Deploy Node.js app to AKS
        run: |
          helm upgrade --install sample-nodejs ./helm-charts \
            --set image.repository=${{ secrets.ACR_NAME }}.azurecr.io/sample-nodejs \
            --set image.tag=latest
